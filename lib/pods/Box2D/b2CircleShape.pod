
=head1 NAME

Box2D::b2CircleShape - A circle shape.

=head1 SYNOPSIS

  my $circle = Box2D::b2CircleShape->new();
  $circle->m_radius( $radius );

=head1 DESCRIPTION

A circle shape.

=head1 METHODS

=head2 new()

Default constructor.

=head2 ComputeAABB( $aabb, $transform )

See also: Box2D:::b2Shape::ComputeAABB

Implements b2Shape.

Parameters:

=over 4

=item * C<Box2D::b2AABB> C<$aabb>

=item * C<Box2D::b2Transform> C<$transform>

=back

=head2 ComputeMass( $massData, $density )

See also: Box2D::b2Shape::ComputeMass

Implements b2Shape.

Parameters:

=over 4

=item * C<Box2D::b2MassData> C<$massData>

=item * C<float32> C<$density>

=back

=head2 RayCast( $output, $input, $transform )

Implements b2Shape.

Parameters:

=over 4

=item * C<Box2D::b2RayCastOutput> C<$output>

=item * C<Box2D::b2RayCastInput> C<$input>

=item * C<Box2D::b2Transform> C<$transform>

=back

Returns a C<bool>

=head2 TestPoint( $transform, $p )

Implements b2Shape.

Parameters:

=over 4

=item * C<Box2D::b2Transform> C<$transform>

=item * C<Box2D::b2Vec2> C<$p>

=back

Returns a C<bool>

=head1 SEE ALSO

=over 4

=item * L<Box2D>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
