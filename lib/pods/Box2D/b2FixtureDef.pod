
=head1 NAME

Box2D::b2FixtureDef - Used to create a fixture.

=head1 SYNOPSIS

  my $fixture_def = Box2D::b2FixtureDef->new();
  $fixture_def->shape( $shape );
  $fixture_def->density( $density )
  $fixture_def->friction( $friction );
  $fixture_def->restitution( $restitution );
  my $fixture = $body->CreateFixtureDef( $fixture_def );

=head1 DESCRIPTION

A fixture definition is used to create a fixture. This class defines an
abstract fixture definition. You can reuse fixture definitions safely.

=head1 METHODS

=head2 new()

The constructor sets the default fixture definition values.

Returns a C<Box2D::b2FixtureDef>

=head2 density()

=head2 density( $density )

The density, usually in kg/m^2.

Parameters:

=over 4

=item * C<float32> C<$density> (optional)

=back

Returns a C<float32>

=head2 filter()

=head2 filter( $filter )

Contact filtering data.

Parameters:

=over 4

=item * C<Box2D::b2Filter> C<$filter> (optional)

=back

Returns a C<Box2D::b2Filter>

=head2 friction()

=head2 friction( $friction )

The friction coefficient, usually in the range [0,1].

Parameters:

=over 4

=item * C<float32> C<$friction> (optional)

=back

Returns a C<float32>

=head2 restitution()

=head2 restitution( $restitution )

The restitution (elasticity) usually in the range [0,1].

Parameters:

=over 4

=item * C<float32> C<$restitution> (optional)

=back

Returns a C<float32>

=head2 shape()

=head2 shape( $shape )

The shape, this must be set. The shape will be cloned, so you can
create the shape on the stack.

Parameters:

=over 4

=item * C<Box2D::b2Shape> C<$shape> (optional)

=back

Returns a C<Box2D::b2Shape>

=head1 SEE ALSO

=over 4

=item * L<Box2D>

=item * L<Box2D::b2Fixture>

=item * L<Box2D::b2Body>

=item * L<Box2D::b2Shape>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
