
=head1 NAME

Box2D::b2PulleyJoint - TODO

=head1 SYNOPSIS

  # TODO

=head1 DESCRIPTION



=head1 METHODS

=head2 new( $data )

Constructor.

Parameters:

=over 4

=item * C<Box2D::b2PulleyJointDef> C<$data>

=back

=head2 GetAnchorA()

Get the anchor point on bodyA in world coordinates. Implements b2Joint.

Returns a C<Box2D::b2Vec2>

=head2 GetAnchorB()

Get the anchor point on bodyB in world coordinates. Implements b2Joint.

Returns a C<Box2D::b2Vec2>

=head2 GetGroundAnchorA()

Get the first ground anchor.

Returns a C<Box2D::b2Vec2>

=head2 GetGroundAnchorB()

Get the second ground anchor.

Returns a C<Box2D::b2Vec2>

=head2 GetLength1()

Get the current length of the segment attached to body1.

Returns a C<float32>

=head2 GetLength2()

Get the current length of the segment attached to body2.

Returns a C<float32>

=head2 GetRatio()

Get the pulley ratio.

Returns a C<float32>

=head2 GetReactionForce( $inv_dt )

Get the reaction force on body2 at the joint anchor in Newtons. Implements b2Joint.

Parameters:

=over 4

=item * C<float32> C<$inv_dt>

=back

Returns a C<Box2D::b2Vec2>

=head2 GetReactionTorque( $inv_dt )

Get the reaction torque on body2 in N*m. Implements b2Joint.

Parameters:

=over 4

=item * C<float32> C<$inv_dt>

=back

Returns a C<float32>

=head2 InitVelocityConstraints( $step )

Implements b2Joint.

Parameters:

=over 4

=item * C<Box2D::b2TimeStep> C<$step>

=back

=head2 SolvePositionConstraints( $baumgarte )

Implements b2Joint.

Parameters:

=over 4

=item * C<float32> C<$baumgarte>

=back

Returns a C<bool>

=head2 SolveVelocityConstraints( $step )

Implements b2Joint.

Parameters:

=over 4

=item * C<Box2D::b2TimeStep> C<$step>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
