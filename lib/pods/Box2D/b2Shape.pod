
=head1 NAME

Box2D::b2Shape - TODO

=head1 SYNOPSIS

  # TODO

=head1 DESCRIPTION



=head1 METHODS

=head2 Type()

Enumerator: e_unknown e_circle e_polygon e_typeCount 

Returns a C<enum>

=head2 new()

Default constructor.

=head2 virtual b2Shape* b2Shape::Clone ( $allocator )

Clone the concrete shape using the provided allocator. Implemented in b2CircleShape, and b2PolygonShape.

Parameters:

=over 4

=item * C<Box2D::b2BlockAllocator> C<$allocator>

=back

=head2 ComputeAABB( $aabb, $xf )

Given a transform, compute the associated axis aligned bounding box for this shape.

Parameters:

=over 4

=item * C<Box2D::b2AABB> C<$aabb> - returns the axis aligned box.

=item * C<Box2D::b2Transform> C<$xf> - the world transform of the shape. Implemented in b2CircleShape, and b2PolygonShape.

=back

=head2 ComputeMass( $massData, $density )

Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed about the local origin.

Parameters:

=over 4

=item * C<Box2D::b2MassData> C<$massData> - returns the mass data for this shape.

=item * C<float32> C<$density> - the density in kilograms per meter squared. Implemented in b2CircleShape, and b2PolygonShape.

=back

=head2 b2Shape::Type b2Shape::GetType ()

=head2 b2Shape::Type b2Shape::GetType ( $b2Shape::Type b2Shape::GetType  )

Get the type of this shape. You can use this to down cast to the concrete shape.

Parameters:

=over 4

=item *  C<$b2Shape::Type b2Shape::GetType > (optional)

=back

=head2 RayCast( $output, $input, $transform )

Cast a ray against this shape.

Parameters:

=over 4

=item * C<Box2D::b2RayCastOutput> C<$output> - the ray-cast results.

=item * C<Box2D::b2RayCastInput> C<$input> - the ray-cast input parameters.

=item * C<Box2D::b2Transform> C<$transform> - the transform to be applied to the shape. Implemented in b2CircleShape, and b2PolygonShape.

=back

Returns a C<bool>

=head2 TestPoint( $xf, $p )

Test a point for containment in this shape. This only works for convex shapes.

Parameters:

=over 4

=item * C<Box2D::b2Transform> C<$xf> - the shape world transform.

=item * C<Box2D::b2Vec2> C<$p> - a point in world coordinates. Implemented in b2CircleShape, and b2PolygonShape.

=back

Returns a C<bool>

=head2 m_radius()

=head2 m_radius( $m_radius )

Parameters:

=over 4

=item * C<float32> C<$m_radius> (optional)

=back

Returns a C<float32>

=head2 m_type()

=head2 m_type( $m_type )

Parameters:

=over 4

=item * C<Type> C<$m_type> (optional)

=back

Returns a C<Type>

=head1 SEE ALSO

=over 4

=item * L<Box2D>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
