
=head1 NAME

Box2D::b2Transform - Contains translation and rotation

=head1 SYNOPSIS

 my $position = Box2D::b2Vec2->new( 4, -2 );
 my $rotation = Box2D::b2Rot->new( 0 );

 # create a new transform
 my $transform = Box2D::b2Transform->new( $postiion, $rotation );

=head1 DESCRIPTION

This class contains information for translation and rotation. It is used to represent
the position and orientation of rigid frames. It provides some methods for manipulating
transforms, and more are found in L<Box2D::b2Math>.

=head1 METHODS

=head2 new

 my $transform = Box2D::b2Transform->new( $position, $rotation );

Returns the new transform object, with a L<Box2D::b2Vec2> position vector
and L<Box2D::b2Rot> rotation.

=head2 p

 my $position = $transform->p;
 $transform->p( $position );

Returns the transform's L<Box2D::b2Vec2> position vector.
Specify a vector to modify it.

=head2 q

 my $rotation = $transform->q;
 $transform->q( $q );

Returns the transform's L<Box2D::b2Rot> rotation.
Specify a rotation to modify it.

=head2 SetIdentity()

 $transform->SetIdentity();

Sets the object to the identity transform: position = [0, 0] and angle = 0.

=head2 Set

 $transform->Set( $position, $rotation );

Sets the transform's position and rotation to the specified
L<Box2D::b2Vec2> and L<Box2D::b2Rot>.

=head1 SEE ALSO

=over 4

=item * L<Box2D::b2Math>

=item * L<Box2D::b2Vec2>

=item * L<Box2D::b2Rot>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
