
=head1 NAME

Box2D::b2WeldJointDef - Weld joint definition.

=head1 SYNOPSIS

  my $joint_def = Box2D::b2WeldJointDef->new();
  $joint_def->Initialize( $body1, $body2, $anchor );
  my $joint = $world->CreateJoint( $joint_def );

=head1 DESCRIPTION

Weld joint definition. You need to specify local anchor points where
they are attached and the relative body angle. The position of the
anchor points is important for computing the reaction torque.

=head1 METHODS

=head2 new()

Default constructor.

Returns a C<Box2D::b2WeldJointDef>

=head2 Initialize( $body1, $body2, $anchor )

Initialize the bodies, anchors, and reference angle using a world
anchor point.

Parameters:

=over 4

=item * C<Box2D::b2Body> C<$body1>

=item * C<Box2D::b2Body> C<$body2>

=item * C<Box2D::b2Vec2> C<$anchor>

=back

=head2 localAnchorA()

=head2 localAnchorA( $localAnchorA )

The local anchor point relative to body1's origin.

Parameters:

=over 4

=item * C<Box2D::b2Vec2> C<$localAnchorA> (optional)

=back

Returns a C<Box2D::b2Vec2>

=head2 localAnchorB()

=head2 localAnchorB( $localAnchorB )

The local anchor point relative to body2's origin.

Parameters:

=over 4

=item * C<Box2D::b2Vec2> C<$localAnchorB> (optional)

=back

Returns a C<Box2D::b2Vec2>

=head2 referenceAngle()

=head2 referenceAngle( $referenceAngle )

The body2 angle minus body1 angle in the reference state (radians).

Parameters:

=over 4

=item * C<float32> C<$referenceAngle> (optional)

=back

Returns a C<float32>

=head1 SEE ALSO

=over 4

=item * L<Box2D>

=item * L<Box2D::b2WeldJoint>

=item * L<Box2D::b2JointDef>

=item * L<Box2D::b2World>

=back

=head1 BUGS

See L<Box2D/BUGS>

=head1 AUTHORS

See L<Box2D/AUTHORS>

=head1 COPYRIGHT & LICENSE

See L<Box2D/"COPYRIGHT & LICENSE">

=cut
