%{

#include <Box2D/Box2D.h>
#include <helper.h>

%}

%module{Box2D};

%name{Box2D::b2Transform} class b2Transform
{

void SetIdentity();

%{

void*
b2Transform::new( ... )
	CODE:
		if(items == 3)
			RETVAL = new b2Transform( *(b2Vec2*)stack_to_object( ST(1) ), *(b2Rot*)stack_to_object( ST(2) ) );
		else if(items == 1)
			RETVAL = new b2Transform;
		else
			croak_xs_usage(cv, "THIS, ()||(position, rotation)");
	OUTPUT:
		RETVAL

void
b2Transform::Set( position, angle )
	b2Vec2* position
	float32 angle
	CODE:
		THIS->Set( *position, angle );

void*
b2Transform::p( ... )
	PREINIT:
		const char* CLASS = "Box2D::b2Vec2";
	CODE:
		if( items > 1 )
		{
			THIS->p = *(b2Vec2*)stack_to_object( ST(1) );
		}
		RETVAL = &(THIS->p);
	OUTPUT:
		RETVAL

void*
b2Transform::q( ... )
	PREINIT:
		const char* CLASS = "Box2D::b2Rot";
	CODE:
		if( items > 1 )
		{
			THIS->q = *(b2Rot*)stack_to_object( ST(1) );
		}
		RETVAL = &(THIS->q);
	OUTPUT:
		RETVAL

%}

};
